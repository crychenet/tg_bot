from aiogram import types, Router
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from config import *
from utils import *

profile_router = Router()


class ProfileSetup(StatesGroup):
    weight = State()
    height = State()
    age = State()
    days_week_of_activity = State()
    average_training_time = State()
    city = State()


async def ask_question(message: types.Message, state: FSMContext, question: str, next_state: State):
    await message.answer(question)
    await state.set_state(next_state)


@profile_router.message(Command("set_profile"))
async def cmd_set_profile(message: types.Message, state: FSMContext):
    await ask_question(message, state, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å (–≤ –∫–≥):", ProfileSetup.weight)


@profile_router.message(ProfileSetup.weight)
async def process_weight(message: types.Message, state: FSMContext):
    try:
        valid_message = convert_to_valid_digit(message.text)
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0")
        return

    await state.update_data(weight=valid_message)
    await ask_question(message, state, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç (–≤ —Å–º):", ProfileSetup.height)


@profile_router.message(ProfileSetup.height)
async def process_height(message: types.Message, state: FSMContext):
    try:
        valid_message = convert_to_valid_digit(message.text)
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0")
        return

    await state.update_data(height=valid_message)
    await ask_question(message, state, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:", ProfileSetup.age)


@profile_router.message(ProfileSetup.age)
async def process_age(message: types.Message, state: FSMContext):
    try:
        valid_message = convert_to_valid_digit(message.text)
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0")
        return

    await state.update_data(age=valid_message)
    await ask_question(message, state, "–°–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –≤ –Ω–µ–¥–µ–ª—é –≤—ã —Ç—Ä–µ–Ω–∏—Ä—É–µ—Ç–µ—Å—å?", ProfileSetup.days_week_of_activity)


@profile_router.message(ProfileSetup.days_week_of_activity)
async def process_days_week_of_activity(message: types.Message, state: FSMContext):
    try:
        valid_message = convert_to_valid_digit(message.text)
        if not (0 <= valid_message <= 7):
            raise ValueError("–î–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 7")
    except ValueError:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 7")
        return

    await state.update_data(days_week_of_activity=int(valid_message))
    await ask_question(message, state, "–°–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –¥–ª–∏—Ç—Å—è –≤–∞—à–∞ —Å—Ä–µ–¥–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞?",
                       ProfileSetup.average_training_time)


@profile_router.message(ProfileSetup.average_training_time)
async def process_average_training_time(message: types.Message, state: FSMContext):
    try:
        valid_message = convert_to_valid_digit(message.text)
    except ValueError:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0")
        return

    await state.update_data(average_training_time=int(valid_message))
    await ask_question(message, state, "–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å?", ProfileSetup.city)


@profile_router.message(ProfileSetup.city)
async def process_city(message: types.Message, state: FSMContext):
    await state.update_data(city=message.text)

    user_data = await state.get_data()
    file_path = os.path.join(PATH_TO_BASE_USERS_INFO, str(message.from_user.id) + '.json')
    await StorageManager.save_json(file_path, user_data)

    response = (f"‚úÖ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n"
                f"üìå –í–µ—Å: {user_data['weight']} –∫–≥\n"
                f"üìè –†–æ—Å—Ç: {user_data['height']} —Å–º\n"
                f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {user_data['age']} –ª–µ—Ç\n"
                f"üèÉ‚Äç‚ôÇÔ∏è –î–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –Ω–µ–¥–µ–ª—é: {user_data['days_week_of_activity']}\n"
                f"‚è≥ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: {user_data['average_training_time']} –º–∏–Ω\n"
                f"üåç –ì–æ—Ä–æ–¥: {user_data['city']}")

    await message.answer(response)
    await state.clear()
